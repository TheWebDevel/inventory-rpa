{"version":3,"sources":["App/Components/Header.js","App/Layouts/NonAuthenticator.js","App/Layouts/Public.js","App/Components/AppLayout.js","App/Layouts/Authenticator.js","App/Layouts/Private.js","App/Containers/Login.js","App/Containers/Home.js","App/Containers/Order.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","handleLogout","ls","set","setState","logoutSuccess","renderLogutButton","loggedIn","Nav","Link","eventKey","href","onClick","get","state","this","to","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","id","className","Component","NonAuthenticator","componentDidMount","console","log","redirectUrl","children","Public","component","rest","render","Layout","Container","Authenticator","Private","Login","renderInvalidLoginAlert","loginError","Alert","handleLogin","e","preventDefault","form","target","email","elements","value","password","length","loginSuccess","style","marginTop","Row","Col","Form","onSubmit","Group","controlId","Label","Control","name","type","placeholder","Text","Button","Home","Card","text","width","Body","Order","handleAddToCart","itemId","itemName","quantity","cartObject","cart","placeOrder","alert","renderCart","Table","striped","bordered","hover","map","cartItem","i","key","size","block","Dropdown","Divider","App","exact","path","Containers","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59732997.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport ls from \"local-storage\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.loggedIn = ls.get(\"loggedIn\");\n    this.state = {\n      logoutSuccess: null\n    };\n  }\n\n  handleLogout = () => {\n    ls.set(\"loggedIn\", false);\n    this.setState({\n      logoutSuccess: \"/login\"\n    });\n  };\n\n  renderLogutButton = () => {\n    if (this.loggedIn) {\n      return (\n        <Nav.Link eventKey={2} href=\"#\" onClick={this.handleLogout}>\n          Logout\n        </Nav.Link>\n      );\n    } else {\n      return (\n        <Nav.Link eventKey={2} href=\"/login\">\n          Login\n        </Nav.Link>\n      );\n    }\n  };\n  render() {\n    if (this.state.logoutSuccess) {\n      return <Redirect to={this.state.logoutSuccess} />;\n    }\n    return (\n      <div>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">Inventory Control System</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#features\">Features</Nav.Link>\n              <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n            </Nav>\n            <Nav>{this.renderLogutButton()}</Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ls from \"local-storage\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class NonAuthenticator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectUrl: null\n    };\n    this.loggedIn = ls.get(\"loggedIn\");\n  }\n\n  componentDidMount = () => {\n    console.log(\"Non\");\n    if (this.loggedIn) {\n      console.log(\"logged in\");\n      this.setState({\n        redirectUrl: \"/\"\n      });\n    }\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n    return <div>{this.props.children}</div>;\n  }\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Header from \"../Components/Header\";\nimport NonAuthenticator from \"./NonAuthenticator\";\n\nconst Public = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      <NonAuthenticator>\n        <Header />\n        <Component {...props} />\n      </NonAuthenticator>\n    )}\n  />\n);\n\nexport default Public;\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nexport default class Layout extends Component {\n  render() {\n    return <Container>{this.props.children}</Container>;\n  }\n}\n","import React, { Component } from \"react\";\nimport ls from \"local-storage\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class Authenticator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectUrl: null\n    };\n    this.loggedIn = ls.get(\"loggedIn\");\n  }\n\n  componentDidMount = () => {\n    if (!this.loggedIn) {\n      this.setState({\n        redirectUrl: \"/login\"\n      });\n    }\n  };\n\n  render() {\n    if (this.state.redirectUrl) {\n      return <Redirect to={this.state.redirectUrl} />;\n    }\n    return <div>{this.props.children}</div>;\n  }\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Header from \"../Components/Header\";\nimport AppLayout from \"../Components/AppLayout\";\nimport Authenticator from \"./Authenticator\";\n\nconst Private = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      <Authenticator>\n        <Header />\n        <AppLayout>\n          <Component {...props} />\n        </AppLayout>\n      </Authenticator>\n    )}\n  />\n);\n\nexport default Private;\n","import React, { Component } from \"react\";\nimport { Button, Form, Container, Row, Col, Alert } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport ls from \"local-storage\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginError: false,\n      loginSuccess: null\n    };\n  }\n\n  renderInvalidLoginAlert = () => {\n    if (this.state.loginError) {\n      return <Alert variant=\"danger\">Invalid Email/ Password</Alert>;\n    }\n  };\n\n  handleLogin = e => {\n    e.preventDefault();\n    this.setState({\n      loginError: false\n    });\n    let form = e.target;\n    let email = form.elements.email.value;\n    let password = form.elements.password.value;\n    if (email.length && password.length) {\n      if (email === \"admin@acme.com\" && password === \"password\") {\n        ls.set(\"loggedIn\", true);\n        this.setState({\n          loginSuccess: \"/\"\n        });\n      } else {\n        this.setState({\n          loginError: true\n        });\n      }\n    } else {\n      this.setState({\n        loginError: true\n      });\n    }\n  };\n\n  render() {\n    if (this.state.loginSuccess) {\n      return <Redirect to={this.state.loginSuccess} />;\n    }\n    return (\n      <Container style={{ marginTop: \"100px\" }}>\n        <Row>\n          <Col></Col>\n          <Col>\n            {this.renderInvalidLoginAlert()}\n            <Form onSubmit={this.handleLogin}>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Col>\n          <Col></Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"mt-5\">\n        <Row>\n          <Col>\n            <Link to=\"#\" className=\"nounderline\">\n              <Card bg=\"secondary\" text=\"white\" style={{ width: \"18rem\" }}>\n                <Card.Header>Inventory</Card.Header>\n                <Card.Body>\n                  <Card.Text>List of all inventory items</Card.Text>\n                </Card.Body>\n              </Card>\n            </Link>\n          </Col>\n          <Col>\n            <Link to=\"/order\" className=\"nounderline\">\n              <Card bg=\"secondary\" text=\"white\" style={{ width: \"18rem\" }}>\n                <Card.Header>Order Items</Card.Header>\n                <Card.Body>\n                  <Card.Text>Order Items for your Inventory</Card.Text>\n                </Card.Body>\n              </Card>\n            </Link>\n          </Col>\n          <Col>\n            <Link to=\"#\" className=\"nounderline\">\n              <Card bg=\"secondary\" text=\"white\" style={{ width: \"18rem\" }}>\n                <Card.Header>Report</Card.Header>\n                <Card.Body>\n                  <Card.Text>Reports for sales and inventory</Card.Text>\n                </Card.Body>\n              </Card>\n            </Link>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Row, Col, Button, Dropdown, Table } from \"react-bootstrap\";\n\nexport default class Order extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cart: []\n    };\n  }\n\n  handleAddToCart = e => {\n    e.preventDefault();\n    let form = e.target;\n    if (\n      form.elements.itemId.value.length &&\n      form.elements.itemName.value.length &&\n      form.elements.quantity.value.length\n    ) {\n      let cartObject = {\n        itemId: form.elements.itemId.value,\n        itemName: form.elements.itemName.value,\n        quantity: form.elements.quantity.value\n      };\n      this.setState(state => {\n        return { cart: [...state.cart, cartObject] };\n      });\n    }\n  };\n\n  placeOrder = () => {\n    this.setState({\n      cart: []\n    });\n    alert(\"Order Placed Successfully!\");\n  };\n\n  renderCart = () => {\n    if (this.state.cart.length) {\n      return (\n        <div>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Item ID</th>\n                <th>Item Name</th>\n                <th>Quantity</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.cart.map((cartItem, i) => (\n                <tr key={i}>\n                  <td>{i + 1}</td>\n                  <td>{cartItem.itemId}</td>\n                  <td>{cartItem.itemName}</td>\n                  <td>{cartItem.quantity}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Button\n            className=\"mt3\"\n            variant=\"primary\"\n            size=\"lg\"\n            block\n            onClick={this.placeOrder}\n          >\n            Place Order\n          </Button>\n        </div>\n      );\n    } else {\n      return <p className=\"text-center\">Cart is Empty</p>;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h3 className=\"mt-5\">Place an item to Cart</h3>\n        <Form onSubmit={this.handleAddToCart}>\n          <Row>\n            <Col>\n              <Form.Control name=\"itemId\" placeholder=\"Item ID\" />\n            </Col>\n            <Col>\n              <Form.Control name=\"itemName\" placeholder=\"Item Name\" />\n            </Col>\n            <Col>\n              <Form.Control\n                name=\"quantity\"\n                type=\"number\"\n                placeholder=\"Quantity\"\n              />\n            </Col>\n            <Col>\n              <Button variant=\"primary\" type=\"submit\">\n                Add to Cart\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n        <Dropdown.Divider className=\"mt-3\" />\n        <h3 className=\"mt-5\">Cart</h3>\n        {this.renderCart()}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport * as Layouts from \"./App/Layouts\";\nimport * as Containers from \"./App/Containers\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Layouts.Private exact path=\"/\" component={Containers.Home} />\n        <Layouts.Private exact path=\"/order\" component={Containers.Order} />\n        <Layouts.Public exact path=\"/login\" component={Containers.Login} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}